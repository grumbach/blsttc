var searchIndex = JSON.parse('{\
"blsttc":{"doc":"A pairing-based threshold cryptosystem for collaborative …","tn":["0","0","Ciphertext","DST","DecryptionShare","Fr","FrRepr","G1","G1Affine","G2","G2Affine","IntoFr","PEngine","PK_SIZE","PublicKey","PublicKeySet","PublicKeyShare","SIG_SIZE","SecretKey","SecretKeySet","SecretKeyShare","Signature","SignatureShare","add_assign","add_assign","add_assign","add_assign_mixed","add_assign_mixed","add_nocarry","as_mut","as_ref","batch_normalization","batch_normalization","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","combine_signatures","decrypt","decrypt","decrypt_share","decrypt_share_no_verify","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div2","double","double","double","drop","encrypt","encrypt_with_rng","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","final_exponentiation","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frobenius_map","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_mut","from_mut","from_repr","hash","hash","hash","hash","hash","hash","hash","hash_g2","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_affine","into_affine","into_fr","into_fr","into_projective","into_projective","into_repr","inverse","is_even","is_normalized","is_normalized","is_odd","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","legendre","miller_loop","mul","mul","mul2","mul_assign","mul_assign","mul_assign","multiplicative_generator","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","negate","negate","negate","negate","negate","num_bits","one","one","one","one","one","pairing_with","pairing_with","parity","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poly","prepare","prepare","public_key","public_key","public_key_share","public_key_share","public_keys","random","random","random","random","random","recommended_wnaf_for_num_scalars","recommended_wnaf_for_num_scalars","recommended_wnaf_for_scalar","recommended_wnaf_for_scalar","reveal","reveal","root_of_unity","secret_key_share","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shl","shr","sign","sign","sign_g2","sign_g2","sqrt","square","sub_assign","sub_noborrow","threshold","threshold","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_random","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","verify","verify_decryption_share","verify_g2","verify_g2","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zero","zero","zero","zero","zeroize","DegreeTooHigh","DuplicateEntry","Error","FromBytesError","FromBytesResult","Invalid","NotEnoughShares","Result","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BivarCommitment","BivarPoly","Commitment","Poly","add","add","add","add","add_assign","add_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","commitment","commitment","constant","degree","degree","degree","degree","deserialize","deserialize","deserialize","drop","drop","eq","eq","eq","evaluate","evaluate","evaluate","evaluate","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","identity","interpolate","into","into","into","into","is_zero","monomial","mul","mul","mul","mul","mul_assign","mul_assign","ne","ne","ne","one","partial_cmp","partial_cmp","random","random","reveal","reveal","row","row","serialize","serialize","serialize","sub","sub","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_random","try_random","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","zero","zeroize","zeroize","0","0","FieldWrap","SerdeSecret","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deserialize","deserialize","eq","fmt","from","from","inner","into","into","into_inner","into_inner","ne","serialize","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["blsttcblsttc::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","blsttc::poly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","blsttc::serde_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","An encrypted message.","The domain separator tag","A decryption share. A threshold of decryption shares can …","","","","","","","A conversion into an element of the field <code>Fr</code>.","","The size of a key’s representation in bytes.","A public key.","A public key and an associated set of public key shares.","A public key share.","The size of a signature’s representation in bytes.","A secret key; wraps a single prime field element. The …","A secret key and an associated set of secret key shares.","A secret key share.","A signature.","A signature share.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines the shares into a signature that can be verified …","Returns the decrypted text, or <code>None</code>, if the ciphertext isn…","Combines the shares to decrypt the ciphertext.","Returns a decryption share, or <code>None</code>, if the ciphertext isn…","Returns a decryption share, without validating the …","","","","","","","","","","","","","","","","","","Encrypts the message using the OS random number generator.","Encrypts the message.","","","","","","","","","","","","","","","","","Crypto errors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key with the given representation, if valid.","Returns the key share with the given representation, if …","Returns the signature with the given representation, if …","Returns the signature share with the given …","Creates a new <code>SecretKey</code> from a mutable reference to a …","Creates a new <code>SecretKeyShare</code> from a mutable reference to …","","","","","","","","","Returns a hash of the given message in <code>G2</code>.","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the signature contains an odd number of …","","","","","","","","","Utilities for distributed key generation: uni- and …","","","Returns the matching public key.","Returns the public key.","Returns the matching public key share.","Returns the <code>i</code>-th public key share.","Returns the corresponding public key set. That …","Creates a new random instance of <code>SecretKey</code>. If you want …","Creates a set of secret key shares, where any …","","","Computes a uniformly random element using rejection …","","","","","Generates a non-redacted debug string. This method …","Generates a non-redacted debug string. This method …","","Returns the <code>i</code>-th secret key share.","Serialization and deserialization implementations for …","","","","","","","","","","Signs the given message.","Signs the given message.","Signs the given element of <code>G2</code>.","Signs the given element of <code>G2</code>.","","","","","Returns the threshold <code>t</code>: any set of <code>t + 1</code> signature …","Returns the threshold <code>t</code>: any set of <code>t + 1</code> signature …","Returns a byte string representation of the public key.","Returns a byte string representation of the public key …","Returns a byte string representation of the signature.","Returns a byte string representation of the signature …","Converts the secret key to big endian bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a set of secret key shares, where any …","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the signature matches the message.","Returns <code>true</code> if the signature matches the message.","Returns <code>true</code> if this is a valid ciphertext. This check is …","Returns <code>true</code> if the decryption share matches the …","Returns <code>true</code> if the signature matches the element of <code>G2</code>.","Returns <code>true</code> if the signature matches the element of <code>G2</code>.","","","","","","","","","","","","","","","","","","","","","","","","The degree is too high for the coefficients to be indexed …","Signature shares contain a duplicated index.","A crypto error.","An error reading a structure from an array of bytes.","The result of attempting to read a structure from an …","Invalid representation","Not enough signature shares.","A crypto result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A commitment to a symmetric bivariate polynomial.","A symmetric bivariate polynomial in the prime field.","A commitment to a univariate polynomial.","A univariate polynomial in the prime field.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the corresponding commitment.","Returns the corresponding commitment. That information …","Returns the polynomial with constant value <code>c</code>.","Returns the degree.","Returns the polynomial’s degree.","Returns the polynomial’s degree; which is the same in …","Returns the polynomial’s degree: It is the same in both …","","","","","","","","","Returns the value at the point <code>i</code>.","Returns the <code>i</code>-th public key share.","Returns the polynomial’s value at the point <code>(x, y)</code>.","Returns the commitment’s value at the point <code>(x, y)</code>.","","","","","","","","","","","","Returns the identity function, i.e. the polynomial “<code>x</code>”…","Returns the unique polynomial <code>f</code> of degree …","","","","","Returns <code>true</code> if the polynomial is the constant value <code>0</code>.","Returns the (monic) monomial: <code>x.pow(degree)</code>.","","","","","","","","","","Returns the polynomial with constant value <code>1</code>.","","","Creates a random polynomial.","Creates a random polynomial.","Generates a non-redacted debug string. This method …","Generates a non-redacted debug string. This method …","Returns the <code>x</code>-th row, as a univariate polynomial.","Returns the <code>x</code>-th row, as a commitment to a univariate …","","","","","","","","","","","","","","","","","","","","Creates a random polynomial. This constructor is …","Creates a random polynomial.","","","","","","","","","Returns the polynomial with constant value <code>0</code>.","","","","","A wrapper type to facilitate serialization and …","<code>SerdeSecret</code> is a wrapper struct for serializing and …","","","","","","","","","","","","","","Returns a reference to the actual secret contained in the …","","","Returns the wrapped field element.","Returns the actual secret from the wrapper","","","","","","","","","","","",""],"i":[1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,3,4,2,2,2,3,4,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,5,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,6,7,8,1,11,13,2,5,13,9,13,10,10,9,10,2,6,7,8,1,9,10,11,12,13,2,3,4,5,9,6,6,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,0,17,6,7,8,1,9,10,11,12,13,15,15,3,3,16,16,4,4,2,2,5,5,17,5,6,7,8,1,9,10,11,12,13,13,14,14,15,15,3,3,16,16,4,4,2,2,2,5,17,6,7,8,1,9,10,5,6,7,8,1,11,12,13,0,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,3,4,18,5,15,16,5,5,2,3,4,2,15,3,16,4,2,5,5,17,15,16,2,3,4,5,5,6,7,8,1,9,10,11,12,13,14,15,16,2,15,3,16,4,5,2,15,3,16,4,5,15,16,8,6,7,8,1,11,13,2,5,0,15,16,9,13,10,13,14,9,14,3,4,5,3,4,3,4,9,10,5,14,0,6,7,8,1,11,12,13,2,2,9,10,9,10,5,5,5,2,13,14,6,7,8,1,9,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,15,3,16,4,2,5,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,14,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,6,7,11,7,6,7,6,7,8,1,9,10,11,12,13,14,15,3,16,4,2,5,17,15,3,16,4,5,9,19,19,0,0,0,20,19,0,19,20,19,20,19,20,19,20,19,20,19,19,20,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,0,0,0,0,21,21,21,22,21,22,21,22,23,24,21,22,23,24,21,22,23,24,21,22,23,24,22,24,21,23,21,21,22,23,24,21,22,24,21,23,21,22,24,21,22,23,24,21,22,23,24,21,21,22,23,24,22,24,21,21,21,22,23,24,21,21,21,21,21,21,21,21,21,22,24,21,22,24,21,23,21,23,23,24,21,22,24,21,21,21,21,21,22,23,24,21,22,23,24,21,22,23,24,21,23,21,22,23,24,21,22,23,24,21,21,23,25,26,0,0,25,26,25,26,26,26,26,25,26,26,26,25,26,26,25,26,25,26,26,25,26,26,25,26,25,26,25,26,25,26],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["g1",3]]],[[["g2",3]]],[[["fr",3]]],[[]],[[]],[[["frrepr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["frrepr",3]],[[],["publickey",3]],[[],["publickeyshare",3]],[[],["signature",3]],[[],["signatureshare",3]],[[],["secretkey",3]],[[],["secretkeyshare",3]],[[],["ciphertext",3]],[[],["decryptionshare",3]],[[],["publickeyset",3]],[[],["secretkeyset",3]],[[],["g1affine",3]],[[],["g1",3]],[[],["g2affine",3]],[[],["g2",3]],[[],["frrepr",3]],[[],["fr",3]],[[],["bls12",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[["publickeyshare",3]],["ordering",4]],[[],["ordering",4]],[[["signatureshare",3]],["ordering",4]],[[],["ordering",4]],[[["publickeyset",3]],["ordering",4]],[[["frrepr",3]],["ordering",4]],[[["fr",3]],["ordering",4]],[[],[["signature",3],["result",6]]],[[["ciphertext",3]],[["option",4],["vec",3]]],[[["ciphertext",3]],[["result",6],["vec",3]]],[[["ciphertext",3]],[["option",4],["decryptionshare",3]]],[[["ciphertext",3]],["decryptionshare",3]],[[]],[[],["secretkeyshare",3]],[[],["frrepr",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[["asref",8]],["ciphertext",3]],[[["asref",8]],["ciphertext",3]],[[["publickey",3]],["bool",15]],[[["publickeyshare",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signatureshare",3]],["bool",15]],[[["secretkey",3]],["bool",15]],[[["secretkeyshare",3]],["bool",15]],[[["ciphertext",3]],["bool",15]],[[["decryptionshare",3]],["bool",15]],[[["publickeyset",3]],["bool",15]],[[["secretkeyset",3]],["bool",15]],[[["g1affine",3]],["bool",15]],[[["g1",3]],["bool",15]],[[["g2affine",3]],["bool",15]],[[["g2",3]],["bool",15]],[[["frrepr",3]],["bool",15]],[[["fr",3]],["bool",15]],null,[[["fq12",3]],[["option",4],["fq12",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["commitment",3]],["publickeyset",3]],[[["poly",3]],["secretkeyset",3]],[[]],[[]],[[["g1",3]],["g1affine",3]],[[]],[[["g1affine",3]],["g1",3]],[[["g2",3]],["g2affine",3]],[[]],[[["g2affine",3]],["g2",3]],[[]],[[["fr",3]],["frrepr",3]],[[]],[[["u64",15]],["frrepr",3]],[[]],[[]],[[["borrow",8]],["frombytesresult",6]],[[["borrow",8]],["frombytesresult",6]],[[["borrow",8]],["frombytesresult",6]],[[["borrow",8]],["frombytesresult",6]],[[["fr",3]]],[[["fr",3]]],[[["frrepr",3]],[["primefielddecodingerror",4],["result",4],["fr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8]],["g2",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["g1affine",3]],[[],["g2affine",3]],[[],["fr",3]],[[],["fr",3]],[[],["g1",3]],[[],["g2",3]],[[],["frrepr",3]],[[],[["fr",3],["option",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["legendresymbol",4]],[[]],[[],["g1",3]],[[],["g2",3]],[[]],[[]],[[]],[[["fr",3]]],[[],["fr",3]],[[["publickey",3]],["bool",15]],[[["publickeyshare",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signatureshare",3]],["bool",15]],[[["secretkey",3]],["bool",15]],[[["secretkeyshare",3]],["bool",15]],[[["ciphertext",3]],["bool",15]],[[["decryptionshare",3]],["bool",15]],[[["publickeyset",3]],["bool",15]],[[["secretkeyset",3]],["bool",15]],[[["g1affine",3]],["bool",15]],[[["g2affine",3]],["bool",15]],[[["frrepr",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["g1affine",3]],[[],["g1",3]],[[],["g2affine",3]],[[],["g2",3]],[[],["fr",3]],[[]],[[]],[[],["bool",15]],[[],[["ordering",4],["option",4]]],[[["publickeyshare",3]],[["option",4],["ordering",4]]],[[],[["ordering",4],["option",4]]],[[["signatureshare",3]],[["option",4],["ordering",4]]],[[],[["ordering",4],["option",4]]],[[["publickeyset",3]],[["option",4],["ordering",4]]],[[["frrepr",3]],[["option",4],["ordering",4]]],[[["fr",3]],[["option",4],["ordering",4]]],null,[[]],[[]],[[],["publickey",3]],[[],["publickey",3]],[[],["publickeyshare",3]],[[["intofr",8]],["publickeyshare",3]],[[],["publickeyset",3]],[[]],[[["usize",15]]],[[],["g1",3]],[[],["g2",3]],[[],["fr",3]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[],["fr",3]],[[["intofr",8]],["secretkeyshare",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]]],[[["u32",15]]],[[["asref",8]],["signature",3]],[[["asref",8]],["signatureshare",3]],[[["into",8],["g2affine",3]],["signature",3]],[[["into",8],["g2affine",3]],["signatureshare",3]],[[],[["fr",3],["option",4]]],[[]],[[["fr",3]]],[[["frrepr",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],[["u8",15],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",6]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["signature",3],["asref",8]],["bool",15]],[[["asref",8],["signatureshare",3]],["bool",15]],[[],["bool",15]],[[["decryptionshare",3],["ciphertext",3]],["bool",15]],[[["signature",3],["into",8],["g2affine",3]],["bool",15]],[[["into",8],["g2affine",3],["signatureshare",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["g1affine",3]],[[],["g1",3]],[[],["g2affine",3]],[[],["g2",3]],[[],["fr",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["error",4]],[[],["frombyteserror",4]],[[]],[[]],[[["error",4]],["bool",15]],[[["frombyteserror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[["u64",15]]],[[["fr",3]]],[[],["poly",3]],[[],["commitment",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["poly",3]],[[],["commitment",3]],[[],["bivarpoly",3]],[[],["bivarcommitment",3]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[],["ordering",4]],[[],["commitment",3]],[[],["bivarcommitment",3]],[[["fr",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[["deserializer",8]],["result",4]],[[]],[[]],[[["poly",3]],["bool",15]],[[["commitment",3]],["bool",15]],[[["bivarcommitment",3]],["bool",15]],[[["intofr",8]],["fr",3]],[[["intofr",8]],["g1",3]],[[["intofr",8]],["fr",3]],[[["intofr",8]],["g1",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["vec",3],["fr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["usize",15]]],[[]],[[["u64",15]]],[[["fr",3]]],[[["fr",3]]],[[["fr",3]]],[[]],[[["poly",3]],["bool",15]],[[["commitment",3]],["bool",15]],[[["bivarcommitment",3]],["bool",15]],[[]],[[],[["ordering",4],["option",4]]],[[],[["ordering",4],["option",4]]],[[["usize",15]]],[[["usize",15]]],[[],["string",3]],[[],["string",3]],[[["intofr",8]],["poly",3]],[[["intofr",8]],["commitment",3]],[[],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[["u64",15]]],[[],["poly",3]],[[["fr",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",6]],[[["usize",15]],["result",6]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["serdesecret",3]],[[]],[[]],[[["deserializer",8]],["result",4]],[[],["result",4]],[[["serdesecret",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["fr",3]],[[]],[[["serdesecret",3]],["bool",15]],[[["serializer",8]],["result",4]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"SignatureShare"],[3,"FrRepr"],[3,"G1"],[3,"G2"],[3,"Fr"],[3,"PublicKey"],[3,"PublicKeyShare"],[3,"Signature"],[3,"SecretKey"],[3,"SecretKeyShare"],[3,"Ciphertext"],[3,"DecryptionShare"],[3,"PublicKeySet"],[3,"SecretKeySet"],[3,"G1Affine"],[3,"G2Affine"],[3,"PEngine"],[8,"IntoFr"],[4,"Error"],[4,"FromBytesError"],[3,"Poly"],[3,"Commitment"],[3,"BivarPoly"],[3,"BivarCommitment"],[3,"FieldWrap"],[3,"SerdeSecret"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};